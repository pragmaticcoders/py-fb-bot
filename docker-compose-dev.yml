version: '2'

services:
  dev-bot-app:
    build:
      context: ./src/bot
      dockerfile: Dockerfile.dev
    volumes:
      - ./src/bot/bot_app:/app/bot_app
      - ./src/bot/wsgi.py:/app/wsgi.py
      - ./src/bot/requirements.txt:/app/requirements.txt
      - ./src/bot/requirements-dev.txt:/app/requirements-dev.txt
      - pip-cache:/root/.cache
    environment:
      - FRONTEND_API_URL=bot:8000
    links:
      - "dev-backend-app:backend"
    ports:
      - "8001:8000"
    stdin_open: true
    command: bash -c "pip install -r requirements.txt -r requirements-dev.txt &&
             gunicorn wsgi:app --bind 0.0.0.0:8000 --worker-class aiohttp.worker.GunicornWebWorker -w 1 --reload"

  bot-tests:
    build:
      context: ./src/bot
      dockerfile: Dockerfile.dev
    volumes:
      - ./src/bot/bot_app:/app/bot_app
      - ./src/bot/tests:/app/tests
      - ./src/bot/wsgi.py:/app/wsgi.py
      - ./src/bot/requirements.txt:/app/requirements.txt
      - ./src/bot/requirements-dev.txt:/app/requirements-dev.txt
      - pip-cache:/root/.cache
    stdin_open: true
    command: bash -c "pip install -r requirements.txt -r requirements-dev.txt &&
             ptw ./ -- -s"


  dev-backend-app:
    build:
      context: ./src/backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./src/backend/backend_app:/app/backend_app
      - ./src/backend/requirements.txt:/app/requirements.txt
      - ./src/backend/requirements-dev.txt:/app/requirements-dev.txt
      - pip-cache:/root/.cache
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres@db:5432/postgres
    links:
      - "dev-db:db"
    stdin_open: true
    command: bash -c "pip install -r requirements.txt -r requirements-dev.txt &&
             python backend_app/manage.py runserver 0.0.0.0:8000 2>&1"

  dev-frontend-app:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.dev
    volumes:
      - node-modules:/app/node_modules
      - ./src/frontend:/app
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"

  frontend-tests:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.dev
    volumes:
      - node-modules:/app/node_modules
      - ./src/frontend:/app
    command: bash -c "npm run test:dev"

  backend-tests:
    build:
      context: ./src/backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./src/backend/backend_app:/app/backend_app
      - ./src/backend/requirements.txt:/app/requirements.txt
      - ./src/backend/requirements-dev.txt:/app/requirements-dev.txt
      - pip-cache:/root/.cache
    environment:
      - DATABASE_URL=postgresql://postgres@db:5433/postgres
    links:
      - "dev-db:db"
    stdin_open: true
    command: bash -c "pip install -r requirements.txt -r requirements-dev.txt &&
             ptw ./backend_app -- -s -rs"

  dev-db:
    image: postgres:9.6
    ports:
      - "5432:5432"

  tests-db:
    image: postgres:9.6
    ports:
      - "5433:5432"

volumes:
  pip-cache:
    driver: local
  node-modules:
    driver: local
